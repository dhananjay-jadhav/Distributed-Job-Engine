services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: auth

  pulsar:
    image: apachepulsar/pulsar:latest
    container_name: pulsar
    ports:
      - 6650:6650
    command: /pulsar/bin/pulsar standalone

  dashboard:
    image: apachepulsar/pulsar-manager:latest
    container_name: pulsar-manager
    ports:
      - '9527:9527'
      - '7750:7750'
    depends_on:
      - pulsar
    links:
      - pulsar
    environment:
      SPRING_CONFIGURATION_FILE: /pulsar-manager/pulsar-manager/application.properties

  # Apollo Router - GraphQL Federation Gateway
  # Note: Requires auth-api and jobs-api to be running
  # Run with: docker compose up router
  router:
    build:
      context: ./apps/router
      dockerfile: Dockerfile
    container_name: apollo-router
    ports:
      - '4000:4000'  # GraphQL API
      - '8088:8088'  # Health check endpoint
    volumes:
      - ./apps/router/supergraph-schema.graphql:/dist/config/supergraph-schema.graphql:ro
      - ./apps/router/router.yaml:/dist/config/router.yaml:ro
    environment:
      APOLLO_ROUTER_CONFIG_PATH: /dist/config/router.yaml
      APOLLO_ROUTER_SUPERGRAPH_PATH: /dist/config/supergraph-schema.graphql
      RUST_LOG: info
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8088/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    extra_hosts:
      # For local development, map service names to host machine
      # Note: 'host-gateway' works on Docker Desktop (Mac/Windows)
      # For Linux, use 'host.docker.internal' or set up proper networking
      - "auth-api:host-gateway"
      - "jobs-api:host-gateway"
